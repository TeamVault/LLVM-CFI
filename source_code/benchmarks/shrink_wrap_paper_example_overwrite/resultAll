getAddrOfVTable: A1
layout : 0x56b1c90
emitVTableDefinitions for A1
0x50829c0,0x56b1c90,0x567f758,A1
Emitting subvtable info for A1
getAddrOfVTable: A2
layout : 0x5084290
emitVTableDefinitions for A2
0x50829c0,0x5084290,0x5680030,A2
Emitting subvtable info for A2
getAddrOfVTable: A3
layout : 0x56c7310
emitVTableDefinitions for A3
0x50829c0,0x56c7310,0x5680900,A3
Emitting subvtable info for A3
getAddrOfVTable: B
Building parent information for B
BaseDecl: 0x5680030A2
BaseDecl: 0x5680900A3
Vtable for 'B' (18 entries).
   0 | vbase_offset (32)
   1 | vbase_offset (16)
   2 | offset_to_top (0)
   3 | B RTTI
       -- (B, 0) vtable address --
   4 | void B::set_b(int)
   5 | int B::get_b()
   6 | vcall_offset (0)
   7 | vcall_offset (0)
   8 | offset_to_top (-16)
   9 | B RTTI
       -- (A2, 16) vtable address --
  10 | void A2::set_a2(int)
  11 | int A2::get_a2()
  12 | vcall_offset (0)
  13 | vcall_offset (0)
  14 | offset_to_top (-32)
  15 | B RTTI
       -- (A3, 32) vtable address --
  16 | void A3::set_a3(int)
  17 | int A3::get_a3()

Virtual base offset offsets for 'B' (2 entries).
   A2 | -24
   A3 | -32

VTable indices for 'B' (2 entries).
   0 | void B::set_b(int)
   1 | int B::get_b()

Addr Pt: 16 base A3
Addr Pt: 10 base A2
Addr Pt: 4 base B

Parents:((B;0),0:[]),((A2;0),1:[(A2,0),]),((A3;0),1:[(A3,0),]),
layout : 0x5714650
emitVTableDefinitions for B
0x50829c0,0x5714650,0x56811d0,B
Emitting subvtable info for B
Recursively calling sd_insertVtableMD for A3
0x50829c0,0x56c7310,0x5680900,A3
Emitting subvtable info for A3
Recursively calling sd_insertVtableMD for A2
0x50829c0,0x5084290,0x5680030,A2
Emitting subvtable info for A2
getAddrOfVTable: C
Building parent information for C
BaseDecl: 0x567f758A1
BaseDecl: 0x56811d0B
Vtable for 'C' (33 entries).
   0 | vbase_offset (64)
   1 | vbase_offset (48)
   2 | vbase_offset (32)
   3 | vbase_offset (16)
   4 | offset_to_top (0)
   5 | C RTTI
       -- (C, 0) vtable address --
   6 | int C::get_b()
   7 | vcall_offset (0)
   8 | vcall_offset (0)
   9 | offset_to_top (-16)
  10 | C RTTI
       -- (A1, 16) vtable address --
  11 | void A1::set_a1(int)
  12 | int A1::get_a1()
  13 | vcall_offset (-32)
  14 | vcall_offset (0)
  15 | vbase_offset (32)
  16 | vbase_offset (16)
  17 | offset_to_top (-32)
  18 | C RTTI
       -- (B, 32) vtable address --
  19 | void B::set_b(int)
  20 | int C::get_b()
       [this adjustment: 0 non-virtual, -48 vcall offset offset]
  21 | vcall_offset (0)
  22 | vcall_offset (0)
  23 | offset_to_top (-48)
  24 | C RTTI
       -- (A2, 48) vtable address --
  25 | void A2::set_a2(int)
  26 | int A2::get_a2()
  27 | vcall_offset (0)
  28 | vcall_offset (0)
  29 | offset_to_top (-64)
  30 | C RTTI
       -- (A3, 64) vtable address --
  31 | void A3::set_a3(int)
  32 | int A3::get_a3()

Virtual base offset offsets for 'C' (4 entries).
   A1 | -24
   A2 | -40
   A3 | -48
   B | -32

Thunks for 'int C::get_b()' (1 entry).
   0 | this adjustment: 0 non-virtual, -48 vcall offset offset

VTable indices for 'C' (1 entries).
   0 | int C::get_b()

Addr Pt: 6 base C
Addr Pt: 31 base A3
Addr Pt: 19 base B
Addr Pt: 25 base A2
Addr Pt: 11 base A1

Parents:((C;0),0:[]),((A1;0),1:[(A1,0),]),((B;0),1:[(B,0),]),((A2;0),1:[(B,1),]),((A3;0),1:[(B,2),]),
layout : 0x5726ee0
Building parent information for B
BaseDecl: 0x5680030A2
BaseDecl: 0x5680900A3
Construction vtable for ('B', 32) in 'C' (20 entries).
   0 | vcall_offset (0)
   1 | vcall_offset (0)
   2 | vbase_offset (32)
   3 | vbase_offset (16)
   4 | offset_to_top (0)
   5 | B RTTI
       -- (B, 32) vtable address --
   6 | void B::set_b(int)
   7 | int B::get_b()
   8 | vcall_offset (0)
   9 | vcall_offset (0)
  10 | offset_to_top (-16)
  11 | B RTTI
       -- (A2, 48) vtable address --
  12 | void A2::set_a2(int)
  13 | int A2::get_a2()
  14 | vcall_offset (0)
  15 | vcall_offset (0)
  16 | offset_to_top (-32)
  17 | B RTTI
       -- (A3, 64) vtable address --
  18 | void A3::set_a3(int)
  19 | int A3::get_a3()

Addr Pt: 18 base A3
Addr Pt: 6 base B
Addr Pt: 12 base A2

Parents:((B;0),0:[]),((A2;0),1:[(A2,0),]),((A3;0),1:[(A3,0),]),
Creating construction vtable for C
0x50829c0,0x5723ce0,0x56824b0,C
Emitting subvtable info for C
Recursively calling sd_insertVtableMD for A3
0x50829c0,0x56c7310,0x5680900,A3
Emitting subvtable info for A3
Recursively calling sd_insertVtableMD for B
0x50829c0,0x5714650,0x56811d0,B
Emitting subvtable info for B
Recursively calling sd_insertVtableMD for A2
0x50829c0,0x5084290,0x5680030,A2
Emitting subvtable info for A2
emitVTableDefinitions for C
0x50829c0,0x5726ee0,0x56824b0,C
Emitting subvtable info for C
Recursively calling sd_insertVtableMD for A3
0x50829c0,0x56c7310,0x5680900,A3
Emitting subvtable info for A3
Recursively calling sd_insertVtableMD for B
0x50829c0,0x5714650,0x56811d0,B
Emitting subvtable info for B
Recursively calling sd_insertVtableMD for A2
0x50829c0,0x5084290,0x5680030,A2
Emitting subvtable info for A2
Recursively calling sd_insertVtableMD for A1
0x50829c0,0x56b1c90,0x567f758,A1
Emitting subvtable info for A1
getAddrOfVTable: D
Building parent information for D
BaseDecl: 0x56824b0C
Vtable for 'D' (43 entries).
   0 | vbase_offset (80)
   1 | vbase_offset (64)
   2 | vbase_offset (48)
   3 | vbase_offset (32)
   4 | vbase_offset (16)
   5 | offset_to_top (0)
   6 | D RTTI
       -- (D, 0) vtable address --
   7 | void D::set_b(int)
   8 | int D::get_b()
   9 | vcall_offset (-16)
  10 | vbase_offset (64)
  11 | vbase_offset (48)
  12 | vbase_offset (32)
  13 | vbase_offset (16)
  14 | offset_to_top (-16)
  15 | D RTTI
       -- (C, 16) vtable address --
  16 | int D::get_b()
       [this adjustment: 0 non-virtual, -56 vcall offset offset]
  17 | vcall_offset (0)
  18 | vcall_offset (0)
  19 | offset_to_top (-32)
  20 | D RTTI
       -- (A1, 32) vtable address --
  21 | void A1::set_a1(int)
  22 | int A1::get_a1()
  23 | vcall_offset (-48)
  24 | vcall_offset (-48)
  25 | vbase_offset (32)
  26 | vbase_offset (16)
  27 | offset_to_top (-48)
  28 | D RTTI
       -- (B, 48) vtable address --
  29 | void D::set_b(int)
       [this adjustment: 0 non-virtual, -40 vcall offset offset]
  30 | int D::get_b()
       [this adjustment: 0 non-virtual, -48 vcall offset offset]
  31 | vcall_offset (0)
  32 | vcall_offset (0)
  33 | offset_to_top (-64)
  34 | D RTTI
       -- (A2, 64) vtable address --
  35 | void A2::set_a2(int)
  36 | int A2::get_a2()
  37 | vcall_offset (0)
  38 | vcall_offset (0)
  39 | offset_to_top (-80)
  40 | D RTTI
       -- (A3, 80) vtable address --
  41 | void A3::set_a3(int)
  42 | int A3::get_a3()

Virtual base offset offsets for 'D' (5 entries).
   A1 | -32
   A2 | -48
   A3 | -56
   B | -40
   C | -24

Thunks for 'int D::get_b()' (2 entries).
   0 | this adjustment: 0 non-virtual, -56 vcall offset offset
   1 | this adjustment: 0 non-virtual, -48 vcall offset offset

Thunks for 'void D::set_b(int)' (1 entry).
   0 | this adjustment: 0 non-virtual, -40 vcall offset offset

VTable indices for 'D' (2 entries).
   0 | void D::set_b(int)
   1 | int D::get_b()

Addr Pt: 16 base C
Addr Pt: 7 base D
Addr Pt: 35 base A2
Addr Pt: 21 base A1
Addr Pt: 29 base B
Addr Pt: 41 base A3

Parents:((D;0),0:[]),((C;0),1:[(C,0),]),((A1;0),1:[(C,1),]),((B;0),1:[(C,2),]),((A2;0),1:[(C,3),]),((A3;0),1:[(C,4),]),
layout : 0x5749030
Building parent information for C
BaseDecl: 0x567f758A1
BaseDecl: 0x56811d0B
Construction vtable for ('C', 16) in 'D' (34 entries).
   0 | vcall_offset (0)
   1 | vbase_offset (64)
   2 | vbase_offset (48)
   3 | vbase_offset (32)
   4 | vbase_offset (16)
   5 | offset_to_top (0)
   6 | C RTTI
       -- (C, 16) vtable address --
   7 | int C::get_b()
   8 | vcall_offset (0)
   9 | vcall_offset (0)
  10 | offset_to_top (-16)
  11 | C RTTI
       -- (A1, 32) vtable address --
  12 | void A1::set_a1(int)
  13 | int A1::get_a1()
  14 | vcall_offset (-32)
  15 | vcall_offset (0)
  16 | vbase_offset (32)
  17 | vbase_offset (16)
  18 | offset_to_top (-32)
  19 | C RTTI
       -- (B, 48) vtable address --
  20 | void B::set_b(int)
  21 | int C::get_b()
       [this adjustment: 0 non-virtual, -48 vcall offset offset]
  22 | vcall_offset (0)
  23 | vcall_offset (0)
  24 | offset_to_top (-48)
  25 | C RTTI
       -- (A2, 64) vtable address --
  26 | void A2::set_a2(int)
  27 | int A2::get_a2()
  28 | vcall_offset (0)
  29 | vcall_offset (0)
  30 | offset_to_top (-64)
  31 | C RTTI
       -- (A3, 80) vtable address --
  32 | void A3::set_a3(int)
  33 | int A3::get_a3()

Addr Pt: 7 base C
Addr Pt: 26 base A2
Addr Pt: 12 base A1
Addr Pt: 20 base B
Addr Pt: 32 base A3

Parents:((C;0),0:[]),((A1;0),1:[(A1,0),]),((B;0),1:[(B,0),]),((A2;0),1:[(B,1),]),((A3;0),1:[(B,2),]),
Creating construction vtable for D
0x50829c0,0x5752970,0x5683018,D
Emitting subvtable info for D
Recursively calling sd_insertVtableMD for C
0x50829c0,0x5726ee0,0x56824b0,C
Emitting subvtable info for C
Recursively calling sd_insertVtableMD for A2
0x50829c0,0x5084290,0x5680030,A2
Emitting subvtable info for A2
Recursively calling sd_insertVtableMD for A1
0x50829c0,0x56b1c90,0x567f758,A1
Emitting subvtable info for A1
Recursively calling sd_insertVtableMD for B
0x50829c0,0x5714650,0x56811d0,B
Emitting subvtable info for B
Recursively calling sd_insertVtableMD for A3
0x50829c0,0x56c7310,0x5680900,A3
Emitting subvtable info for A3
Building parent information for B
BaseDecl: 0x5680030A2
BaseDecl: 0x5680900A3
Construction vtable for ('B', 48) in 'D' (20 entries).
   0 | vcall_offset (0)
   1 | vcall_offset (0)
   2 | vbase_offset (32)
   3 | vbase_offset (16)
   4 | offset_to_top (0)
   5 | B RTTI
       -- (B, 48) vtable address --
   6 | void B::set_b(int)
   7 | int B::get_b()
   8 | vcall_offset (0)
   9 | vcall_offset (0)
  10 | offset_to_top (-16)
  11 | B RTTI
       -- (A2, 64) vtable address --
  12 | void A2::set_a2(int)
  13 | int A2::get_a2()
  14 | vcall_offset (0)
  15 | vcall_offset (0)
  16 | offset_to_top (-32)
  17 | B RTTI
       -- (A3, 80) vtable address --
  18 | void A3::set_a3(int)
  19 | int A3::get_a3()

Addr Pt: 12 base A2
Addr Pt: 6 base B
Addr Pt: 18 base A3

Parents:((B;0),0:[]),((A2;0),1:[(A2,0),]),((A3;0),1:[(A3,0),]),
Creating construction vtable for D
0x50829c0,0x574a2a0,0x5683018,D
Emitting subvtable info for D
Recursively calling sd_insertVtableMD for A2
0x50829c0,0x5084290,0x5680030,A2
Emitting subvtable info for A2
Recursively calling sd_insertVtableMD for B
0x50829c0,0x5714650,0x56811d0,B
Emitting subvtable info for B
Recursively calling sd_insertVtableMD for A3
0x50829c0,0x56c7310,0x5680900,A3
Emitting subvtable info for A3
emitVTableDefinitions for D
0x50829c0,0x5749030,0x5683018,D
Emitting subvtable info for D
Recursively calling sd_insertVtableMD for C
0x50829c0,0x5726ee0,0x56824b0,C
Emitting subvtable info for C
Recursively calling sd_insertVtableMD for A2
0x50829c0,0x5084290,0x5680030,A2
Emitting subvtable info for A2
Recursively calling sd_insertVtableMD for A1
0x50829c0,0x56b1c90,0x567f758,A1
Emitting subvtable info for A1
Recursively calling sd_insertVtableMD for B
0x50829c0,0x5714650,0x56811d0,B
Emitting subvtable info for B
Recursively calling sd_insertVtableMD for A3
0x50829c0,0x56c7310,0x5680900,A3
Emitting subvtable info for A3
getAddrOfVTable: E
Building parent information for E
BaseDecl: 0x56811d0B
Vtable for 'E' (25 entries).
   0 | vbase_offset (48)
   1 | vbase_offset (32)
   2 | vbase_offset (16)
   3 | offset_to_top (0)
   4 | E RTTI
       -- (E, 0) vtable address --
   5 | vcall_offset (0)
   6 | vcall_offset (0)
   7 | vbase_offset (32)
   8 | vbase_offset (16)
   9 | offset_to_top (-16)
  10 | E RTTI
       -- (B, 16) vtable address --
  11 | void B::set_b(int)
  12 | int B::get_b()
  13 | vcall_offset (0)
  14 | vcall_offset (0)
  15 | offset_to_top (-32)
  16 | E RTTI
       -- (A2, 32) vtable address --
  17 | void A2::set_a2(int)
  18 | int A2::get_a2()
  19 | vcall_offset (0)
  20 | vcall_offset (0)
  21 | offset_to_top (-48)
  22 | E RTTI
       -- (A3, 48) vtable address --
  23 | void A3::set_a3(int)
  24 | int A3::get_a3()

Virtual base offset offsets for 'E' (3 entries).
   A2 | -32
   A3 | -40
   B | -24


Addr Pt: 5 base E
Addr Pt: 11 base B
Addr Pt: 17 base A2
Addr Pt: 23 base A3

Parents:((E;0),0:[]),((B;0),1:[(B,0),]),((A2;0),1:[(B,1),]),((A3;0),1:[(B,2),]),
layout : 0x57697f0
Building parent information for B
BaseDecl: 0x5680030A2
BaseDecl: 0x5680900A3
Construction vtable for ('B', 16) in 'E' (20 entries).
   0 | vcall_offset (0)
   1 | vcall_offset (0)
   2 | vbase_offset (32)
   3 | vbase_offset (16)
   4 | offset_to_top (0)
   5 | B RTTI
       -- (B, 16) vtable address --
   6 | void B::set_b(int)
   7 | int B::get_b()
   8 | vcall_offset (0)
   9 | vcall_offset (0)
  10 | offset_to_top (-16)
  11 | B RTTI
       -- (A2, 32) vtable address --
  12 | void A2::set_a2(int)
  13 | int A2::get_a2()
  14 | vcall_offset (0)
  15 | vcall_offset (0)
  16 | offset_to_top (-32)
  17 | B RTTI
       -- (A3, 48) vtable address --
  18 | void A3::set_a3(int)
  19 | int A3::get_a3()

Addr Pt: 6 base B
Addr Pt: 12 base A2
Addr Pt: 18 base A3

Parents:((B;0),0:[]),((A2;0),1:[(A2,0),]),((A3;0),1:[(A3,0),]),
Creating construction vtable for E
0x50829c0,0x57684d0,0x5681b50,E
Emitting subvtable info for E
Recursively calling sd_insertVtableMD for B
0x50829c0,0x5714650,0x56811d0,B
Emitting subvtable info for B
Recursively calling sd_insertVtableMD for A2
0x50829c0,0x5084290,0x5680030,A2
Emitting subvtable info for A2
Recursively calling sd_insertVtableMD for A3
0x50829c0,0x56c7310,0x5680900,A3
Emitting subvtable info for A3
emitVTableDefinitions for E
0x50829c0,0x57697f0,0x5681b50,E
Emitting subvtable info for E
Recursively calling sd_insertVtableMD for B
0x50829c0,0x5714650,0x56811d0,B
Emitting subvtable info for B
Recursively calling sd_insertVtableMD for A2
0x50829c0,0x5084290,0x5680030,A2
Emitting subvtable info for A2
Recursively calling sd_insertVtableMD for A3
0x50829c0,0x56c7310,0x5680900,A3
Emitting subvtable info for A3

